# Source: citm-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: citm-server
    chart: citm-server-1.22.0
    component: "citm-server"
    release: citm
    helm.sh/chart: citm-server-1.22.0
    app.kubernetes.io/name: citm-server
    app.kubernetes.io/instance: citm
    app.kubernetes.io/component: MessagingAndProtocols
    app.kubernetes.io/version: "1.22.0-1.0.3.0-rocky8"
    app.kubernetes.io/managed-by: "helm"
    app.kubernetes.io/part-of: "citm"
  name: citm-citm-server
  namespace: citm
spec:
  selector:
    matchLabels:
      app: citm-server
  replicas: 1
  template:
    metadata:
      labels:
        app: citm-server
        component: "citm-server"
        release: citm
        helm.sh/chart: citm-server-1.22.0
        app.kubernetes.io/name: citm-server
        app.kubernetes.io/instance: citm
        app.kubernetes.io/component: MessagingAndProtocols
        app.kubernetes.io/version: "1.22.0-1.0.3.0-rocky8"
        app.kubernetes.io/managed-by: "helm"
        app.kubernetes.io/part-of: "citm"
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      initContainers:
      - name: copy
        image: "csf-docker-delivered.repo.cci.nokia.net/citm/citm-nginx-server:1.22.0-1.0.3.0-rocky8"
        imagePullPolicy: "IfNotPresent"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          runAsUser: 1000
        command: ['sh', '-c', 'mkdir -p /tmp/webapp /tmp/conf /tmp/certificate; cd /tmp/webapp; cd ../conf; cd ../ssl; openssl req -nodes -x509 -newkey rsa:2048 -keyout tls.key -out tls.crt -days 365 -subj "/C=HU/ST=Budapest/L=Budapest/O=Nokia/OU=NSW/CN=www.nokia.com"; ']
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 200Mi
            memory: 512Mi
          requests:
            cpu: 250m
            ephemeral-storage: 200Mi
            memory: 256Mi
        volumeMounts:
        - name: tlskey
          mountPath: /tmp/ssl
      volumes:
      - name: conf-nginx-volume
        configMap:
      - name: tlskey
        emptyDir: {}
      - name: default-secret
        emptyDir: {}
      serviceAccountName: "default"
      containers:
      - name: citm-citm-server
        image: "csf-docker-delivered.repo.cci.nokia.net/citm/citm-nginx-server:1.22.0-1.0.3.0-rocky8"
        imagePullPolicy: "IfNotPresent"
        command:
        - bash
        - -c
        - |2

          if [ "${skip_nginx_configuration:-}" != "true" ]
          then
            SKEY=/etc/nginx/server.key
            SCRT=/etc/nginx/server.crt
            if [ -z "${server_key:-}" ] && [ -z "${server_crt:-}" ]
            then
                 openssl req -x509 -newkey rsa:4096 -keyout $SKEY -out $SCRT -nodes -days 3650 -subj "/CN=${MH}/OU=AA_CTO_Software_PlatformEng/O=Nokia/L=Nozay/ST=IDF/C=FR" > /dev/null 2>&1
            else
                 [ -z ${server_key:-} ] || [ -z ${server_crt:-} ] && logOut "Both key file and cert file must be provided. Exiting" && exit 1
                 [ ! -r ${server_key:-} ] || [ ! -r ${server_crt:-} ] && logOut "Cannot access key file ${server_key:-} or cert file ${server_crt}. $ACCESS_DENIED_MSG. Exiting" && exit 1
            fi

            cat > /etc/nginx/conf.d/http/ssl-certificate.conf <<EOF
            ssl_certificate ${server_crt:-${SCRT}};
            ssl_certificate_key ${server_key:-${SKEY}};
          EOF

          fi
          ./docker.nginx.server.run.sh
        securityContext:
          runAsUser: 1000
        env:
        - name: modsecurity
          value: "false"
        - name: modsecurity_crs
          value: "false"
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NUM_WORKER_PROCESSES
          value: "auto"
        - name: json_log
          value: "true"
        - name: disable_monitoring_console
          value: "false"
        - name: docker_debug
          value: "false"
        - name: watchconf
          value: "false"
        - name: watchtimer
          value: "2"
        - name: TZ
          value: "UTC"
        startupProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 5
        volumeMounts:
        - name: conf-nginx-volume
          mountPath: /usr/share/nginx/conf
        - name: tlskey
          mountPath: /usr/share/nginx/ssl
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 200Mi
            memory: 512Mi
          requests:
            cpu: 250m
            ephemeral-storage: 200Mi
            memory: 256Mi
      hostNetwork: false
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - citm-server
              topologyKey: kubernetes.io/hostname
            weight: 100
